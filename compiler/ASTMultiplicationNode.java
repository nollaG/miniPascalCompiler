/* Generated By:JJTree: Do not edit this line. ASTMultiplicationNode.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package compiler;

import codeGenerator.ArrayType;
import codeGenerator.GenerateException;
import codeGenerator.GeneratorContext;
import codeGenerator.IntegerType;
import codeGenerator.RealType;
import codeGenerator.RecordType;
import codeGenerator.Type;

public
class ASTMultiplicationNode extends SimpleNode {
  public ASTMultiplicationNode(int id) {
    super(id);
  }

  public ASTMultiplicationNode(Pascal p, int id) {
    super(p, id);
  }
  public Object generateCode(GeneratorContext gc) throws GenerateException{
	  return getType(gc);
  }
  public Type getType(GeneratorContext gc) throws GenerateException{
	  if (children!=null && children.length==3) {
		  Type type1=null,type2=null;
		  if (children[0]!=null && children[0] instanceof ASTMultiplicationNode) {
			  type1=((ASTMultiplicationNode)children[0]).getType(gc);
		  }
		  if (children[0]!=null && children[0] instanceof ASTfactor) {
			  type1=((ASTfactor)children[0]).getType(gc);
		  }
		  if (children[2]!=null && children[2] instanceof ASTfactor) {
			  type2=((ASTfactor)children[2]).getType(gc);
		  }
		  if (type1 instanceof RecordType || type1 instanceof ArrayType) {
			  throw new GenerateException("Can not calculate with NonSimpleType!",((SimpleNode)children[0]).currentToken);
		  }
		  if (type2 instanceof RecordType || type2 instanceof ArrayType) {
			  throw new GenerateException("Can not calculate with NonSimpleType!",((SimpleNode)children[2]).currentToken);
		  }
		  if (type1 instanceof RealType) {
			  return type1;
		  }
	      if (type2 instanceof RealType) {
			  return type2;
		  }
		  if (type1 instanceof IntegerType) {
			  return type1;
		  }
	      if (type2 instanceof IntegerType) {
			  return type2;
		  }
	      return type1;
	  }
	  throw new GenerateException("Something Very Bad!\n");
  }

}
/* JavaCC - OriginalChecksum=35cddcee5d5c59f5ba3a830253b2b4f4 (do not edit this line) */
