format elf64 executable 3
entry _main

segment readable writeable
otestrec rq 2

segment readable executable
testss:
push rbp
mov rbp,rsp
sub rsp,8
lea rax,[rbp-8]
push rax
lea rax,[rbp+16]
mov rax,[rax]
lea rax,[rax+0]
mov rax,[rax]
pop rbx
mov [rbx],rax
lea rax,[rbp+16]
mov rax,[rax]
lea rax,[rax+1]
push rax
mov rax,52
pop rbx
mov [rbx],rax
lea rax,[rbp-8]
mov rax,[rax]
mov rsp,rbp
pop rbp
ret
_main:
mov rax,otestrec
lea rax,[rax+0]
push rax
mov rax,48
pop rbx
mov [rbx],rax
mov rax,otestrec
lea rax,[rax+1]
push rax
mov rax,50
pop rbx
mov [rbx],rax
push rax
push rbx
push rcx
push rdx
mov rax,otestrec
lea rax,[rax+0]
mov rax,[rax]
mov [io_buf],al
mov rax,4   ;write
mov rbx,1   ;stdout
mov rcx,io_buf
mov rdx,1   ;len
int 0x80    ;syscall
mov rax,10
mov [io_buf],al
mov rax,4   ;write
mov rbx,1   ;stdout
mov rcx,io_buf
mov rdx,1   ;len
int 0x80    ;syscall
pop rdx
pop rcx
pop rbx
pop rax
push rax
push rbx
push rcx
push rdx
mov rax,otestrec
push rax
call testss
add rsp,8
mov [io_buf],al
mov rax,4   ;write
mov rbx,1   ;stdout
mov rcx,io_buf
mov rdx,1   ;len
int 0x80    ;syscall
mov rax,10
mov [io_buf],al
mov rax,4   ;write
mov rbx,1   ;stdout
mov rcx,io_buf
mov rdx,1   ;len
int 0x80    ;syscall
pop rdx
pop rcx
pop rbx
pop rax
push rax
push rbx
push rcx
push rdx
mov rax,otestrec
lea rax,[rax+1]
mov rax,[rax]
mov [io_buf],al
mov rax,4   ;write
mov rbx,1   ;stdout
mov rcx,io_buf
mov rdx,1   ;len
int 0x80    ;syscall
mov rax,10
mov [io_buf],al
mov rax,4   ;write
mov rbx,1   ;stdout
mov rcx,io_buf
mov rdx,1   ;len
int 0x80    ;syscall
pop rdx
pop rcx
pop rbx
pop rax
mov rbx,0   ;exit(0)
mov rax,1
int 0x80
segment readable writeable
io_buf rb 1
